syntax = "proto3";

package pbx;

import "pbx/common.proto";

import "google/protobuf/timestamp.proto";

/* ----------------------------------------
 * Provider Model
 * ----------------------------------------
 */
message Provider {
    string id = 1;
    string name = 2;
    bool status = 3;
    string abbr = 4;

    repeated string BXX__updated_fields = 5;
}

/* ----------------------------------------
* Container Model
* ----------------------------------------
*/
message Container {
    string id = 1;
    string name = 2;
    string size = 3;
    string provider = 4;
    google.protobuf.Timestamp created_at = 5;
    string created_by = 6;

    repeated string BXX__updated_fields = 7;
}
   
message ContainerCreateRequest {
    Container container = 1;
    RequestHeader header = 2;
}

message ContainerCreateResponse {
    Container container = 1;
}

message ContainerFindRequest {
    string filter = 1;
    RequestHeader header = 2;
}

message ContainerFindResponse {
    repeated Container containers = 1;
}

message ContainerFindOneRequest {
    string filter = 1;
    RequestHeader header = 2;
}    
   
message ContainerFindOneResponse {
    Container container = 1;
}

message ContainerFindByIdRequest {
    string id = 1;
    string filter = 2;
    RequestHeader header = 3;
}
   
message ContainerFindByIdResponse {
    Container container = 1;
}
   
message ContainerCountRequest {
    string filter = 1;
    RequestHeader header = 2;
}
   
message ContainerCountResponse {
    int64 count = 1;
}
   
message ContainerUpdateRequest {
    string where = 1;
    Container container = 2;
    RequestHeader header = 3;
}
   
message ContainerUpdateResponse {
    bool updated = 1;
}
   
message ContainerDeleteByIdRequest {
    string id = 1;
    RequestHeader header = 2;
}
   
message ContainerDeleteByIdResponse {
    bool deleted = 1;
}
   
message ContainerDeleteWithWhereRequest {
    string where = 1;
    RequestHeader header = 2;
}
   
message ContainerDeleteWithWhereResponse {
    bool deleted = 1;
}

/* ----------------------------------------
* File Model
* ----------------------------------------
*/
message File {
    string id = 1;
    string file_name = 2;
    string file_mime = 3;
    string file_size = 4;
    bool status = 5;
    string container = 6;
    string service = 7;
    string module = 8;
    string uri = 9;
    string created_by = 10;
    string updated_by = 11;
    string deleted_by = 12;
    google.protobuf.Timestamp created_at = 13;
    google.protobuf.Timestamp updated_at = 14;
    google.protobuf.Timestamp deleted_at = 15;
    string tags = 16;

    repeated string BXX__updated_fields = 17;
}

message UploadFileRequest {
    bytes content = 1;
    File file = 2;
    RequestHeader header = 3;
}

message UploadFileResponse {
    File file = 1;
}

message DownloadFileRequest {
    string file_name = 1;
    string container = 2;
    RequestHeader header = 3;
}

message DownloadFileResponse {
    bool uploaded = 1; // fix this
}

message GetFilesRequest {
    string filter = 1;
    string container = 2;
    RequestHeader header = 3;
}

message GetFilesResponse {
    repeated File files = 1;
}

message GetFileRequest {
    string file_name = 1;
    string container = 2;
    RequestHeader header = 3;
}

message GetFileResponse {
    File file = 1;
}

message RemoveFileRequest {
    string file_name = 1;
    string container = 2;
    RequestHeader header = 3;
}

message RemoveFileResponse {
    bool deleted = 1;
}

message FileDeleteByIdRequest {
    string id = 1;
    RequestHeader header = 2;
}
   
message FileDeleteByIdResponse {
    bool deleted = 1;
}

service FlexFssService {
  // Container
  rpc ContainerCreate (ContainerCreateRequest) returns (ContainerCreateResponse);
  rpc ContainerFind (ContainerFindRequest) returns (ContainerFindResponse);
  rpc ContainerFindOne (ContainerFindOneRequest) returns (ContainerFindOneResponse);
  rpc ContainerFindByID (ContainerFindByIdRequest) returns (ContainerFindByIdResponse);
  rpc ContainerCount (ContainerCountRequest) returns (ContainerCountResponse);
  rpc ContainerUpdate (ContainerUpdateRequest) returns (ContainerUpdateResponse);
  rpc ContainerDeleteByID (ContainerDeleteByIdRequest) returns (ContainerDeleteByIdResponse);
  rpc ContainerDeleteWithWhere (ContainerDeleteWithWhereRequest) returns (ContainerDeleteWithWhereResponse);

  // Files
  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
  rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse);
  rpc GetFiles(GetFilesRequest) returns (GetFilesResponse);
  rpc GetFile(GetFileRequest) returns (GetFileResponse);
  rpc RemoveFile(RemoveFileRequest) returns (RemoveFileResponse);
  rpc FileDeleteByID(FileDeleteByIdRequest) returns (FileDeleteByIdResponse);
}